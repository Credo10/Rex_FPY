//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ECRData
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ECREntities : DbContext
    {
        public ECREntities()
            : base("name=ECREntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tblDoc> tblDoc { get; set; }
        public virtual DbSet<tblDocAppDetail> tblDocAppDetail { get; set; }
        public virtual DbSet<tblDocApproval> tblDocApproval { get; set; }
        public virtual DbSet<tblDocAppStatus> tblDocAppStatus { get; set; }
        public virtual DbSet<tblDocLine> tblDocLine { get; set; }
        public virtual DbSet<tblDocLineAsc> tblDocLineAsc { get; set; }
        public virtual DbSet<tblDocType> tblDocType { get; set; }
        public virtual DbSet<vwDocApproval> vwDocApproval { get; set; }
        public virtual DbSet<vwDocApproved> vwDocApproved { get; set; }
        public virtual DbSet<vwDocApprovers> vwDocApprovers { get; set; }
        public virtual DbSet<tblAssociate> tblAssociate { get; set; }
        public virtual DbSet<tblDocApprovalType> tblDocApprovalType { get; set; }
        public virtual DbSet<tblFile> tblFile { get; set; }
        public virtual DbSet<vwDocAssociates> vwDocAssociates { get; set; }
        public virtual DbSet<tblAssociateDocShow> tblAssociateDocShow { get; set; }
        public virtual DbSet<tblConcessionGroup> tblConcessionGroup { get; set; }
        public virtual DbSet<tblConcessionRole> tblConcessionRole { get; set; }
        public virtual DbSet<tblConcessionRoleAssign> tblConcessionRoleAssign { get; set; }
        public virtual DbSet<tblConcessionDeviation> tblConcessionDeviation { get; set; }
        public virtual DbSet<tblConcession> tblConcession { get; set; }
        public virtual DbSet<tblConcessionApproval> tblConcessionApproval { get; set; }
        public virtual DbSet<tblConcessionMaterial> tblConcessionMaterial { get; set; }
        public virtual DbSet<vwConcessionDiviationRiskPerson> vwConcessionDiviationRiskPerson { get; set; }
        public virtual DbSet<tblDocAppStatusHistory> tblDocAppStatusHistory { get; set; }
    
        public virtual int p_GetDocApprovers(Nullable<int> dAID, ObjectParameter email)
        {
            var dAIDParameter = dAID.HasValue ?
                new ObjectParameter("DAID", dAID) :
                new ObjectParameter("DAID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_GetDocApprovers", dAIDParameter, email);
        }
    
        public virtual int p_tblDocDel(string dAID)
        {
            var dAIDParameter = dAID != null ?
                new ObjectParameter("DAID", dAID) :
                new ObjectParameter("DAID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_tblDocDel", dAIDParameter);
        }
    
        public virtual int p_tblDocFind(string pLID, string doc, string dASID)
        {
            var pLIDParameter = pLID != null ?
                new ObjectParameter("PLID", pLID) :
                new ObjectParameter("PLID", typeof(string));
    
            var docParameter = doc != null ?
                new ObjectParameter("Doc", doc) :
                new ObjectParameter("Doc", typeof(string));
    
            var dASIDParameter = dASID != null ?
                new ObjectParameter("DASID", dASID) :
                new ObjectParameter("DASID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_tblDocFind", pLIDParameter, docParameter, dASIDParameter);
        }
    
        public virtual ObjectResult<p_tblDocInUp_Result> p_tblDocInUp(string dAID, string dLID, string aSID, string doc, string dTID, string rev, string title, string briefText, string path, string dASID)
        {
            var dAIDParameter = dAID != null ?
                new ObjectParameter("DAID", dAID) :
                new ObjectParameter("DAID", typeof(string));
    
            var dLIDParameter = dLID != null ?
                new ObjectParameter("DLID", dLID) :
                new ObjectParameter("DLID", typeof(string));
    
            var aSIDParameter = aSID != null ?
                new ObjectParameter("ASID", aSID) :
                new ObjectParameter("ASID", typeof(string));
    
            var docParameter = doc != null ?
                new ObjectParameter("Doc", doc) :
                new ObjectParameter("Doc", typeof(string));
    
            var dTIDParameter = dTID != null ?
                new ObjectParameter("DTID", dTID) :
                new ObjectParameter("DTID", typeof(string));
    
            var revParameter = rev != null ?
                new ObjectParameter("Rev", rev) :
                new ObjectParameter("Rev", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var briefTextParameter = briefText != null ?
                new ObjectParameter("BriefText", briefText) :
                new ObjectParameter("BriefText", typeof(string));
    
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            var dASIDParameter = dASID != null ?
                new ObjectParameter("DASID", dASID) :
                new ObjectParameter("DASID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_tblDocInUp_Result>("p_tblDocInUp", dAIDParameter, dLIDParameter, aSIDParameter, docParameter, dTIDParameter, revParameter, titleParameter, briefTextParameter, pathParameter, dASIDParameter);
        }
    
        public virtual int p_tblDocLineAsc_Cross()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_tblDocLineAsc_Cross");
        }
    
        public virtual int p_tblDocLineAsc_Del(string aSIDs)
        {
            var aSIDsParameter = aSIDs != null ?
                new ObjectParameter("ASIDs", aSIDs) :
                new ObjectParameter("ASIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_tblDocLineAsc_Del", aSIDsParameter);
        }
    
        public virtual int p_tblDocLineAsc_Up(Nullable<int> aSID, string name, Nullable<int> val)
        {
            var aSIDParameter = aSID.HasValue ?
                new ObjectParameter("ASID", aSID) :
                new ObjectParameter("ASID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var valParameter = val.HasValue ?
                new ObjectParameter("Val", val) :
                new ObjectParameter("Val", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_tblDocLineAsc_Up", aSIDParameter, nameParameter, valParameter);
        }
    
        public virtual int p_tblDocLineAsc_Up2(string aSIDs, string name)
        {
            var aSIDsParameter = aSIDs != null ?
                new ObjectParameter("ASIDs", aSIDs) :
                new ObjectParameter("ASIDs", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_tblDocLineAsc_Up2", aSIDsParameter, nameParameter);
        }
    }
}
